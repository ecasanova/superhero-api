image: atlassian/default-image:2

definitions:
  steps:
    - step: &push-docker-image
        name: Push Docker image to ECR
        services:
          - docker
        script:
          - echo Logging in to Amazon ECR...
          - eval $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION} )
          # builds docker image from a local dockerfile
          - docker build -t {$AWS_CLUSTER_NAME} .
          # tags image and push to ecr repo
          - docker tag superhero-api:latest ${AWS_IAM_ROLE_ID}.dkr.ecr.us-east-1.amazonaws.com/{$AWS_CLUSTER_NAME}:latest
          - docker push ${AWS_IAM_ROLE_ID}.dkr.ecr.{AWS_DEFAULT_REGION}.amazonaws.com/{$AWS_CLUSTER_NAME}:latest
    - step: &deploy-nodejs
        name: Deploy NodeJs Service
        script:
          - pipe: atlassian/aws-ecs-deploy:1.6.1
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              CLUSTER_NAME: $AWS_CLUSTER_NAME
              SERVICE_NAME: $AWS_SERVICE_NAME
              FORCE_NEW_DEPLOYMENT: "true"

pipelines:
  custom:
    nodejs-dev: &nodejs-dev
      - step: *push-docker-image
      - step:
          <<: *deploy-nodejs
          deployment: dev-deploy

  branches:
    dev: *nodejs-dev
